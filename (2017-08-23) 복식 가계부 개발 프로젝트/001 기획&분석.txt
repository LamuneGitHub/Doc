# 복식 가계부 프로그램 

## 목표 
	
* 내 가계부,자산을 관리할 프로그램 개발
* 관리하는데 일상 생활의 시간을 많이 소모 하지 않도록 하는 기능 필요
	but 초반에는 자동기능 보다 수동기능으로 개발하고 점점 맞춤형 자동기능 추가
* 최신 기술들, Ntree 에서 배웠던 기술들을 사용하여 프로그램 개발능력 향상에 도움이 되도록 한다.
* 서비스를 오픈해서 사람들이 사용할 수 있을 만큼의 완성도
* 핸드폰에서도 사용 가능 하도록 

## 설계 

### 요구사항
	
#### 기능적 요구사항 (비즈니스)

	* 사용자 권한
		**  ADMIN
			- 시스템 관리에 필요한 권한
			
		** 가계부 사용자(사용자)
			*** 가계부의 소유자
			*** 가계부의 관리자
			*** 가계부의 조회 가능자
			*** 가계부 내역 조회 가능자
			*** 가계부 내역 수정 가능자
			
	* 사용자는 복수의 가계부를 가질 수 있다
	
	* 복식/단식 가계부로 언제든지 전환 가능
		-> 논리적으로 가능한지 검증 필요 //:TODO(Lamune):
	
	* 기본기능 정의 
		* 가계부 생성
		* 가계부 삭제
			- 가계부 내역 모두 삭제
		* 가계부 수정
		* 계정항목 입력
		* 계정항목 수정
		* 계정항목 삭제
		* 내역 입력
		* 내역 수정
		* 내역 삭제
		* 가계부 권한의 공유 관리
			- 타 사용자에게 공유 ( 조회/수정/ )
			- 공유된 권한 조회

	* 추가기능
		* 계정항목 합치기
		* 계정항목 나누기
		* 작업 Rollback 
		* 계정항목에 현재 금액을 입력하면 그에 맞춰서  '결손처리? 계정맞춤' 내역을생성 해주는 기능

	* 알람 기능 
		- 알람
		- 경고
	
	* (특정일자의) 자산상황 Report  
		: 미래의 경우에는 예약된 내역들(default값)로 반영하여 계산
	
	* (특정 기간의) 자산 변동 내역(?) Report
	
	* 반복(예약)기능 필요
		: 자동으로 처리 or  해당 일시가 되면 반영할 지 여부를 confirm 하도록 함
		: default 값을 꼭 받도록 함 -> 미래 일시의 자산 내역을 확인하기 위하여
		: 많은 항목을 잘못 입력했을때 Rollback 기능이 필요 할 듯..

	* 가계부 내역 Favorite 기능 
		: 자주 입력하는 가계부 내역을 등록해 놓고 클릭만으로 실행할 수 있도록
			- 추가로 입력받을 파라미터 항목을 지정 가능 하도록
				--  ex) 금액 , 계좌 , 내용

	* history 기능
		: 생성/ 삭제 / 수정 사항을 모두 기록으로 남겨서 나중에 투명하게 확인 할 수 있도록 하는 기능 ... 
		: 해당 시점의 상태에서 당시의 모든 계정의 상태를 확인할 수 있도록 하는 기능 

	* 권한 공유는  '공유권한'이 있는 경우에만 가능
	* 권한 공유 가능한 권한은 내가 가지고 있는 '권한' 만 가능
		
#### 기능적 요구사항 (시스템)

	* 계정은 id/pwd , https로만 ?  
		- 로그인 없이도 사용가능 하도록 하자
		- 로그인이 꼭필요한 경우에만 로그인 정보를 요구 하도록 ..
	* 

#### 비기능적 요구사항
	
	* 개인정보는 남기지 않는다.
	
	* UTC Time stamp 사용
	
	* PC , 핸드폰 , 스마트워치 등의 멀티 플랫폼에서 서비스 제공
	
		**  비즈니스 로직은 WEB SERVICE로 제작
			-> 
				장 : 각 플랫폼에서 UI만 개발하고.. 비즈니스 로직은 재활용 가능
					, 추후 서비스 스케일 확장시 유리
				단 : 속도 저하 (네트워크 속도 비용),
					, API의 버전관리... 고려 해야 할 듯... 지속적인 기능 개선을 고려 하면.... 구조가.. 상당히 바뀔가능성이 높아 보임
					, 
					
		**  최소한의 개발 비용으로 PC, 핸드폰 개발
			-> 웹으로 개발 ? 한번에 PC, 핸드폰에 둘 다  쓸 수 있도록 하는게 가능 하도록 하려면 미리 어떤점을 고려 해야 하는지 알아 볼것 //:TODO(Lamune):
			
		** 동시 접속자 20명 
			-> 서버 성능은 문제 없을것 으로 보임
		
		** 서비스단의 API는 비동기로
		
		** 자동적으로 데이터 백업 필요함
			-> 데이터 소실되면 치명적임
			-> 한번에 몰아서 입력/ 수정 하는 성격이 강하므로... 시간이 아니라 각 작업별로 백업이 될 수 있는 방안도 고려할 필요 있음
			-> 일주일치를 저장하면 충분할 것으로 보임
			-> 계정별 백업 가능할까?
			
		** 복구.
			-> 해당 일시에 백업된 데이터로 복구
			-> & 이후에 추가된 작업을 선택해서 복구 
			-> 계정별 복구 기능
			

		